# https://docs.microsoft.com/en-us/azure/container-instances/container-instances-github-action
name: Build and deploy Dockerized Python app to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      # checkout the repo
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Stop existing container"
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az container stop --name aci-boostifaiapi --resource-group boostifai

      - name: "Delete existing image"
        uses: azure/CLI@v1
        if: always()
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az acr repository delete -n boostifaipoc --image boostifaiapi:latest --yes

      - name: "Docker login"
        uses: azure/docker-login@v1
        if: always()
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: "Build and push image"
        if: always()
        run: |
          cd ./api
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/boostifaiapi:latest
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/boostifaiapi:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    contiue-on-error: true

    steps:
      - name: "Deploy to Azure Container Instances"
        if: always()
        uses: "azure/aci-deploy@v1"
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/boostifaiapi:latest
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: aci-boostifaiapi
          location: "west europe"
          environment-variables: STORAGE_CONNECTION_STRING=secrets.STORAGE_CONNECTION_STRING
          ports: 80
